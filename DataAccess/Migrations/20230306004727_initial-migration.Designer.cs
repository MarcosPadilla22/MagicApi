// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230306004727_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Models.Affinity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Affinity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            IsDeleted = false,
                            Name = "Oscuridad"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            IsDeleted = false,
                            Name = "Luz"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            IsDeleted = false,
                            Name = "Fuego"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            IsDeleted = false,
                            Name = "Agua"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            IsDeleted = false,
                            Name = "Viento"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            IsDeleted = false,
                            Name = "Tierra"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Grimoire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Grimoire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Trébol de 1 hoja",
                            IsDeleted = false,
                            Name = "Sinceridad"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Trébol de 2 hojas",
                            IsDeleted = false,
                            Name = "Esperanza"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Trébol de 3 hojas",
                            IsDeleted = false,
                            Name = "Amor"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Trébol de 4 hojas",
                            IsDeleted = false,
                            Name = "Buena Fortuna"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Trébol de 5 hojas",
                            IsDeleted = false,
                            Name = "Desesperación"
                        });
                });

            modelBuilder.Entity("DataAccess.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("Age")
                        .HasMaxLength(2)
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 3, 5, 18, 47, 27, 438, DateTimeKind.Local).AddTicks(730));

                    b.Property<int>("IdAffinity")
                        .HasColumnType("int");

                    b.Property<int>("IdGrimoire")
                        .HasColumnType("int");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdAffinity")
                        .IsUnique();

                    b.HasIndex("IdGrimoire")
                        .IsUnique();

                    b.ToTable("Student");
                });

            modelBuilder.Entity("DataAccess.Models.Student", b =>
                {
                    b.HasOne("DataAccess.Models.Affinity", "Affinity")
                        .WithOne("Student")
                        .HasForeignKey("DataAccess.Models.Student", "IdAffinity")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Grimoire", "Grimoire")
                        .WithOne("Student")
                        .HasForeignKey("DataAccess.Models.Student", "IdGrimoire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Affinity");

                    b.Navigation("Grimoire");
                });

            modelBuilder.Entity("DataAccess.Models.Affinity", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Models.Grimoire", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
